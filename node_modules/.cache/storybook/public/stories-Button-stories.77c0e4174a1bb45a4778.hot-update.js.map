{"version":3,"file":"stories-Button-stories.77c0e4174a1bb45a4778.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AChEA;AAEA;AAQA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAkBA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AAEA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAGA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AAtBA;AAwBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;;;;;;;;;;;;;;;;;;ACAA;AAQA;AAPA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AAlCA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAcA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AClsources":["webpack://teste-ds/./src/components/Button/Button-styles.ts","webpack://teste-ds/./src/components/Button/Button.tsx","webpack://teste-ds/./src/components/Button/Enums.ts","webpack://teste-ds/./src/components/Tooltip/Tooltip.tsx","webpack://teste-ds/./src/components/index.ts","webpack://teste-ds/./src/icons/SpinnerIcon.tsx","webpack://teste-ds/./src/icons/_iconMap.ts","webpack://teste-ds/./src/components/Tooltip/styles.css","webpack://teste-ds/./src/components/Tooltip/styles.css?7682"],"sourcesContent":["export const classWidth = {\n  full: 'w-full',\n  fit: 'w-fit',\n  auto: 'w-auto'\n}\n\nexport const classAlign = {\n  default: 'self-auto',\n  center: 'self-center',\n  start: 'self-start',\n  end: 'self-end'\n}\n\nexport const classTheme = {\n  text: 'p-0',\n  default: 'p-3 rounded-lg',\n  outline: 'p-3 border-[1px] rounded-lg bg-transparent'\n}\n\nexport const classVariant = {\n  text: {\n    primary: 'text-blue-500',\n    secondary: 'text-yellow-500',\n    success: 'text-green-500',\n    danger: 'text-red-500',\n    warning: 'text-orange-500',\n    info: 'text-gray-300',\n    light: 'text-gray-100',\n    dark: 'text-gray-900',\n    ghost: ''\n  },\n  default: {\n    primary: 'text-white bg-blue-500 hover:bg-blue-600',\n    secondary: 'bg-yellow-500 hover:bg-yellow-600',\n    success: 'bg-green-500 hover:bg-green-600',\n    danger: 'text-white bg-red-500 hover:bg-red-600',\n    warning: 'text-white bg-orange-500 hover:bg-orange-600',\n    info: 'bg-gray-300 hover:bg-gray-400',\n    light: 'bg-gray-100 hover:bg-gray-200 ',\n    dark: 'text-white bg-gray-900 hover:bg-gray-700',\n    ghost: 'bg-transparent'\n  },\n  outline: {\n    primary: 'border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white',\n    secondary:\n      'border-yellow-500 text-yellow-500 hover:bg-yellow-500 hover:text-gray-900',\n    success:\n      'border-green-500 text-green-500 hover:bg-green-500 hover:text-white',\n    danger: 'border-red-500 text-red-500 hover:bg-red-500 hover:text-white',\n    warning:\n      'border-orange-500 text-orange-500 hover:bg-orange-500 hover:text-white',\n    info: 'border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white',\n    light:\n      'border-gray-300 text-gray-500 hover:bg-gray-300 hover:text-gray-600',\n    dark: 'border-gray-900 text-gray-900 hover:bg-gray-900 hover:text-white',\n    ghost: 'border-transparent'\n  }\n}\n\nexport const classSize = {\n  sm: 'py-2 px-2', //TODO: Add font size class\n  md: 'font-medium text-base py-3 px-4',\n  lg: 'py-4 px-4',\n  xl: 'py-5 px-5'\n}\n","import React, { createRef } from \"react\";\n\nimport {\n  classSize,\n  classTheme,\n  classWidth,\n  classVariant,\n  classAlign,\n} from \"./Button-styles\";\n\nimport { SpinnerIcon } from \"../../icons/SpinnerIcon\";\nimport iconMap from \"../../icons/_iconMap\";\n\nimport Tooltip from \"../Tooltip/Tooltip\";\n\nimport { ButtonProps } from \"./Button.types\";\n\nconst Button = ({\n  refProp,\n  label,\n  link,\n  icon,\n  size = \"md\",\n  width = \"auto\",\n  align = \"default\",\n  customClass = \"\",\n  tooltip,\n  isLoading,\n  isDisabled,\n  theme = \"default\",\n  type,\n  variant = \"primary\",\n  ...events\n}: ButtonProps &\n  React.ButtonHTMLAttributes<HTMLButtonElement> &\n  React.AnchorHTMLAttributes<HTMLAnchorElement>) => {\n  const renderIcon = (marginSide = \"me-2\") => {\n    if (isLoading) {\n      return (\n        <span className={marginSide}>\n          <SpinnerIcon />\n        </span>\n      );\n    }\n\n    if (!icon) return null;\n\n    const MappedIcon = iconMap[icon.name];\n\n    return (\n      <span className={marginSide}>\n        <MappedIcon\n          color={icon.color || \"white\"}\n          strokeWidth={icon.stroke || 2}\n          size={24}\n        />\n      </span>\n    );\n  };\n\n  const buttonRef = refProp ?? createRef<HTMLButtonElement>();\n\n  const classDefault = `button flex items-center justify-center font-medium h-fit ${\n    isDisabled && \"cursor-not-allowed opacity-50\"\n  }`;\n\n  const buttonClassName = `${classDefault} ${classWidth[width]} ${classAlign[align]} ${classVariant[theme][variant]} ${classTheme[theme]} ${classSize[size]} ${customClass}`;\n\n  const rightIconsClassName = label ? \"ms-2 right-icon\" : \"right-icon\";\n  const leftIconsClassName = label ? \"me-2 left-icon\" : \"left-icon\";\n\n  const contentButton = () => {\n    return (\n      <>\n        {(!icon?.side || icon.side === \"left\") &&\n          renderIcon(leftIconsClassName)}\n        <span>{label}</span>\n        {icon?.side === \"right\" && renderIcon(rightIconsClassName)}\n      </>\n    );\n  };\n\n  if (link) {\n    if (tooltip) {\n      return (\n        <Tooltip text={tooltip}>\n          <a\n            href={link}\n            className={buttonClassName}\n            ref={buttonRef as React.LegacyRef<HTMLAnchorElement>}\n            {...events}\n          >\n            {contentButton()}\n          </a>\n        </Tooltip>\n      );\n    } else {\n      return (\n        <a\n          href={link}\n          className={buttonClassName}\n          ref={buttonRef as React.LegacyRef<HTMLAnchorElement>}\n          {...events}\n        >\n          {contentButton()}\n        </a>\n      );\n    }\n  }\n\n  if (tooltip) {\n    return (\n      <Tooltip text={tooltip}>\n        <button className={buttonClassName} ref={buttonRef} {...events}>\n          {contentButton()}\n        </button>\n      </Tooltip>\n    );\n  } else {\n    return (\n      <button\n        type={type}\n        className={buttonClassName}\n        {...events}\n        disabled={isDisabled}\n        ref={buttonRef}\n      >\n        {contentButton()}\n      </button>\n    );\n  }\n};\n\nexport default Button;\n","export const ButtonVariants = {\n  primary: 'primary',\n  secondary: 'secondary',\n  success: 'success',\n  danger: 'danger',\n  warning: 'warning',\n  info: 'info',\n  light: 'light',\n  dark: 'dark',\n  ghost: 'ghost'\n} as const\n\nexport const ButtonThemes = {\n  default: 'default',\n  outline: 'outline',\n  text: 'text'\n} as const\n\nexport const ButtonTypes = {\n  button: 'button',\n  submit: 'submit',\n  reset: 'reset'\n} as const\n\nexport const ButtonSizes = {\n  sm: 'sm',\n  md: 'md',\n  lg: 'lg',\n  xl: 'xl'\n} as const\n\nexport const ButtonWidths = {\n  auto: 'auto',\n  fit: 'fit',\n  full: 'full'\n} as const\n\nexport const ButtonAligns = {\n  default: 'default',\n  center: 'center',\n  start: 'start',\n  end: 'end'\n} as const\n","import React from \"react\";\nimport * as RadixTooltip from \"@radix-ui/react-tooltip\";\nimport \"./styles.css\";\nimport { TooltipProps } from \"./Tooltip.types\";\n\nconst Tooltip = ({ children, text, copyToClipboard }: TooltipProps) => {\n  return (\n    <RadixTooltip.Provider delayDuration={50}>\n      <RadixTooltip.Root>\n        <RadixTooltip.Trigger asChild>\n          <button\n            onClick={() => {\n              if (copyToClipboard) navigator.clipboard.writeText(text);\n            }}\n          >\n            {children}\n          </button>\n        </RadixTooltip.Trigger>\n        <RadixTooltip.Portal>\n          <RadixTooltip.Content className=\"TooltipContent\" sideOffset={5}>\n            {text}\n            <RadixTooltip.Arrow />\n          </RadixTooltip.Content>\n        </RadixTooltip.Portal>\n      </RadixTooltip.Root>\n    </RadixTooltip.Provider>\n  );\n};\n\nexport default Tooltip;\n","export { default as Button } from \"./Button\"\r\nexport { default as Tooltip } from './Tooltip/Tooltip'","export const SpinnerIcon = ({\n  color = \"gray-500\",\n  strokeWidth = 1.5,\n  size = 24,\n}: {\n  color?: string;\n  strokeWidth?: number;\n  size?: number;\n}) => {\n  return (\n    <svg\n      className={`text-${color} animate-spin stroke-current`}\n      width={size}\n      height={size}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth={strokeWidth}\n        style={{ strokeWidth: `${strokeWidth} !important` }}\n      />\n      <path\n        className=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      />\n    </svg>\n  );\n};\n","import { SpinnerIcon } from './SpinnerIcon'\n\ntype IconProps = {\n  [key: string]: ({\n    color,\n    strokeWidth,\n    size\n  }: {\n    color?: string\n    strokeWidth?: number\n    size?: number\n  }) => JSX.Element\n}\n\nconst iconMap: IconProps = {\n  SpinnerIcon\n}\n\nexport default iconMap\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* reset */\nbutton {\n  all: unset;\n}\n\n.TooltipContent {\n  border-radius: 4px;\n  padding: 10px 15px;\n  font-size: 15px;\n  line-height: 1;\n  color: #000;\n  background-color: white;\n  box-shadow:\n    hsl(206 22% 7% / 35%) 0px 10px 38px -10px,\n    hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\n  user-select: none;\n  animation-duration: 200ms;\n  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);\n  will-change: transform, opacity;\n}\n.TooltipContent[data-state='delayed-open'][data-side='top'] {\n  animation-name: slideDownAndFade;\n}\n.TooltipContent[data-state='delayed-open'][data-side='right'] {\n  animation-name: slideLeftAndFade;\n}\n.TooltipContent[data-state='delayed-open'][data-side='bottom'] {\n  animation-name: slideUpAndFade;\n}\n.TooltipContent[data-state='delayed-open'][data-side='left'] {\n  animation-name: slideRightAndFade;\n}\n\n.TooltipContent span svg {\n  fill: white;\n}\n\n.IconButton {\n  font-family: inherit;\n  border-radius: 100%;\n  height: 35px;\n  width: 35px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: blue;\n  background-color: white;\n  box-shadow: 0 2px 10px green;\n}\n.IconButton:hover {\n  background-color: pink;\n}\n.IconButton:focus {\n  box-shadow: 0 0 0 2px black;\n}\n\n@keyframes slideUpAndFade {\n  from {\n    opacity: 0;\n    transform: translateY(2px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideRightAndFade {\n  from {\n    opacity: 0;\n    transform: translateX(-2px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideDownAndFade {\n  from {\n    opacity: 0;\n    transform: translateY(-2px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideLeftAndFade {\n  from {\n    opacity: 0;\n    transform: translateX(2px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/Tooltip/styles.css\"],\"names\":[],\"mappings\":\"AAAA,UAAU;AACV;EACE,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,eAAe;EACf,cAAc;EACd,WAAW;EACX,uBAAuB;EACvB;;6CAE2C;EAC3C,iBAAiB;EACjB,yBAAyB;EACzB,wDAAwD;EACxD,+BAA+B;AACjC;AACA;EACE,gCAAgC;AAClC;AACA;EACE,gCAAgC;AAClC;AACA;EACE,8BAA8B;AAChC;AACA;EACE,iCAAiC;AACnC;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,oBAAoB;EACpB,mBAAmB;EACnB,YAAY;EACZ,WAAW;EACX,oBAAoB;EACpB,mBAAmB;EACnB,uBAAuB;EACvB,WAAW;EACX,uBAAuB;EACvB,4BAA4B;AAC9B;AACA;EACE,sBAAsB;AACxB;AACA;EACE,2BAA2B;AAC7B;;AAEA;EACE;IACE,UAAU;IACV,0BAA0B;EAC5B;EACA;IACE,UAAU;IACV,wBAAwB;EAC1B;AACF;;AAEA;EACE;IACE,UAAU;IACV,2BAA2B;EAC7B;EACA;IACE,UAAU;IACV,wBAAwB;EAC1B;AACF;;AAEA;EACE;IACE,UAAU;IACV,2BAA2B;EAC7B;EACA;IACE,UAAU;IACV,wBAAwB;EAC1B;AACF;;AAEA;EACE;IACE,UAAU;IACV,0BAA0B;EAC5B;EACA;IACE,UAAU;IACV,wBAAwB;EAC1B;AACF\",\"sourcesContent\":[\"/* reset */\\nbutton {\\n  all: unset;\\n}\\n\\n.TooltipContent {\\n  border-radius: 4px;\\n  padding: 10px 15px;\\n  font-size: 15px;\\n  line-height: 1;\\n  color: #000;\\n  background-color: white;\\n  box-shadow:\\n    hsl(206 22% 7% / 35%) 0px 10px 38px -10px,\\n    hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\\n  user-select: none;\\n  animation-duration: 200ms;\\n  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);\\n  will-change: transform, opacity;\\n}\\n.TooltipContent[data-state='delayed-open'][data-side='top'] {\\n  animation-name: slideDownAndFade;\\n}\\n.TooltipContent[data-state='delayed-open'][data-side='right'] {\\n  animation-name: slideLeftAndFade;\\n}\\n.TooltipContent[data-state='delayed-open'][data-side='bottom'] {\\n  animation-name: slideUpAndFade;\\n}\\n.TooltipContent[data-state='delayed-open'][data-side='left'] {\\n  animation-name: slideRightAndFade;\\n}\\n\\n.TooltipContent span svg {\\n  fill: white;\\n}\\n\\n.IconButton {\\n  font-family: inherit;\\n  border-radius: 100%;\\n  height: 35px;\\n  width: 35px;\\n  display: inline-flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: blue;\\n  background-color: white;\\n  box-shadow: 0 2px 10px green;\\n}\\n.IconButton:hover {\\n  background-color: pink;\\n}\\n.IconButton:focus {\\n  box-shadow: 0 0 0 2px black;\\n}\\n\\n@keyframes slideUpAndFade {\\n  from {\\n    opacity: 0;\\n    transform: translateY(2px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n@keyframes slideRightAndFade {\\n  from {\\n    opacity: 0;\\n    transform: translateX(-2px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateX(0);\\n  }\\n}\\n\\n@keyframes slideDownAndFade {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-2px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n@keyframes slideLeftAndFade {\\n  from {\\n    opacity: 0;\\n    transform: translateX(2px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateX(0);\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./styles.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}