{"version":3,"file":"stories-Button-stories.562b8163c229e5f705a7.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAfA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAGA;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AACA;AACA","sources":["webpack://teste-ds/./src/components/Avatar/Avatar.tsx","webpack://teste-ds/./src/components/index.ts","webpack://teste-ds/./src/utils/classNames.ts"],"sourcesContent":["import { classNames } from \"../../utils/classNames\";\nimport { AvatarProps, Size } from \"./Avatar.types\";\n\nconst sizes: Record<Size, string> = {\n  small: \"w-10 h-10\",\n  medium: \"w-12 h-12\",\n  large: \"w-14 h-14\",\n};\n\nconst EmptyAvatar = ({ size = \"medium\" }: Pick<AvatarProps, \"size\">) => (\n  <span\n    data-testid=\"empty-avatar\"\n    className={classNames(\n      \"inline-block overflow-hidden bg-gray-100 rounded-full\",\n      sizes[size]\n    )}\n  >\n    <svg\n      className=\"h-full w-full text-gray-300\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path d=\"M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z\" />\n    </svg>\n  </span>\n);\n\nexport default function Avatar({ size = \"medium\", src, alt }: AvatarProps) {\n  if (!src) {\n    return <EmptyAvatar size={size} />;\n  }\n\n  return (\n    <img\n      className={classNames(\"inline-block rounded-full\", sizes[size])}\n      src={src}\n      alt={alt}\n    />\n  );\n}\n","export { default as Button } from \"./Button\"\r\nexport { default as Tooltip } from './Tooltip'\r\nexport { default as Avatar } from './Avatar'","export function classNames(...classes: unknown[]): string {\n  return classes.filter(Boolean).join(' ')\n}\n"],"names":[],"sourceRoot":""}